= Android
Kotlin
:backend:   slidy
:max-width: 45em
:data-uri:
:icons:
:theme: volnitsky
:pygments:
<link rel="stylesheet" href="myslidy.css" type="text/css" />

== Un petit aperçu

[source,kotlin]
data class Person(val name: String, val age: Int? = null)

[source,kotlin]
fun main(args: Array<String>) {
	val persons = listOf(Person("Alice), Person("Bob", age = 29))
	val oldest = persons.maxBy { it.age ?: 0 }
	println("The oldest is: $oldest")
}
//The oldest is: Person(name=Bob, age=29)


== Quel est l'intérêt ?

* Un language pragmatique, concis et moderne.
* Server-side, Android, partout où on trouve du Java.
* Complètement interopérable avec Java.
* Qui compile en bytecode Java 6.
* Fortement typé statiquement, avec support des nullables
* A la fois fonctionnel et orienté objet:
	- fonctions de premier ordre
	- immutabilité
	- pas d'effets de bord
* Open Source


== Anko

Un DSL pour remplacer les layouts.

[source,kotlin]
verticalLayout {
	val name = editText()
	button("Say hi!") {
		onClick { toast("Hello, ${name.text}") }
	}
}


== Functions

* Classique
[source,kotlin]
fun nom(param1: TypeParam1, param2: String? = "def"): TypeRetour {
	//Code de la fonction
	return x
}

* Inline
[source,kotlin]
fun sum(a: Int, b: Int): Int = a + b


== Structures conditionnelles

* Tout est une expression

[source,kotlin]
val result = if (condition) 1 else 2

[source,kotlin]
return when (variable) {
	is 1 -> "un"
	is 2 -> "deux"
	42 < 12 -> "The answer"
	else -> "trop"
}

== Variables

* On déclare le type après car souvent inféré par le compilateur (pas nécessaire donc)
* val / var

CAUTION: C'est la référence qu'on ne peut pas bouger, pas son contenu

== Classes, constructeur, properties...

== Ranges, boucles

== Exceptions

== La gestion du null

Force la vérification
Null et Java (annotations, type non inférable)

== Extension functions

IMPORTANT: LA KILLER FEATURE de Kotlin

Permet de rajouter des méthodes après coup sur des classes existantes.

[source,kotlin]
fun String.lastChar(): Char = this.get(this.length - 1)

[source,kotlin]
"Hello".lastChar

== Sealed classes


== Références

* Mooc Coursera par les créateurs du language : https://www.coursera.org/learn/kotlin-for-java-developers
* Les Koans Kotlin : https://kotlinlang.org/docs/tutorials/koans.html
* Le livre de référence : Kotlin in Action

